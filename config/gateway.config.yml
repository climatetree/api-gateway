http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  stories:
    host: '*'
    paths: 
      - '/story/:storyId'
    methods: ["PUT", "POST", "PATCH", "DELETE", "GET"]
  places:
    host: '*'
    paths: 
      - '/:placeName'
    methods: ["PUT", "POST", "PATCH", "DELETE", "GET"]
serviceEndpoints:
  storiesService:
    url: 'https://backend-mongo-stories.azurewebsites.net/stories'
  placesService:
    url: 'https://places-postgres.azurewebsites.net/api/names'
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
pipelines:
  - name: stories
    apiEndpoints:
      - stories
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
    #  - key-auth:
      - proxy:
          - action:
              serviceEndpoint: storiesService 
              changeOrigin: true
      - log: # policy name
        - action:    # array of condition/actions objects
            message: ${req.method} ${req.originalUrl} # parameter for log action
  - name: places
    apiEndpoints:
      - places
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
    #  - key-auth:
      - proxy:
          - action:
              serviceEndpoint: placesService 
              changeOrigin: true
      - log: # policy name
          - action:    # array of condition/actions objects
              message: ${req.method} ${req.originalUrl} # parameter for log action

