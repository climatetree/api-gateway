http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  stories:
    host: '*'
    paths: ['/place/:placeId', '/title/:keyword']
  storiesVerified:
    host: '*'
    paths: ['/story/comment','/create','/:storyID/like/:userID', '/:storyID/unlike/:userID']
  places:
    host: '*'
    paths: ['/:placeName', '/:placeId/similar', '/:placeId/similar/advanced']
  users:
    host: '*'
    paths: ['/register']
serviceEndpoints:
  storiesService:
    url: 'http://localhost:3000/stories'
  storiesVerifiedService:
    url: 'http://localhost:3000/stories'
  placesService:
    url: 'https://places-postgres.azurewebsites.net/api/places'
  userService:
    url: 'https://users.azurewebsites.net/api' 
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - jwt
pipelines:
  - name: storiesVerified
    apiEndpoints:
      - storiesVerified
    policies:
      - jwt:
          - action:
              checkCredentialExistence: false
              secretOrPublicKey: ${ASD_KEY}
      - proxy:
          - action:
              serviceEndpoint: storiesVerifiedService 
              changeOrigin: true
      - log: # policy name
        - action:    # array of condition/actions objects
            message: ${req.method} ${req.originalUrl} 
  - name: stories
    apiEndpoints:
      - stories
    policies:
      - proxy:
          - action:
              serviceEndpoint: storiesService 
              changeOrigin: true
      - log: # policy name
        - action:    # array of condition/actions objects
            message: ${req.method} ${req.originalUrl}          
  - name: places
    apiEndpoints:
      - places
    policies:
      - proxy:
          - action:
              serviceEndpoint: placesService 
              changeOrigin: true
      - log: # policy name
          - action:    # array of condition/actions objects
              message: ${req.method} ${req.originalUrl} 
  - name: users
    apiEndpoints:
      - users
    policies:
      - proxy:
          - action:
              serviceEndpoint: userService 
              changeOrigin: true
      - log: # policy name
        - action:    # array of condition/actions objects
            message: ${req.method} ${req.originalUrl} 
